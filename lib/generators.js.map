{"version":3,"sources":["../src/generators.js"],"names":["generateAssert","validation","location","tag","generator","options","name","type","stringify","compact","message","generateWarn","generators","warn","debugger","trace","throw"],"mappings":";;;;;QAGgBA,c,GAAAA,c;;AAFhB;;;;;;AAEO,SAASA,cAAT,OAA2E;AAAA,QAAlDC,UAAkD,QAAlDA,UAAkD;AAAA,QAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,QAA5BC,GAA4B,QAA5BA,GAA4B;AAAA,QAAbC,SAAa,QAAvBC,OAAuB,CAAbD,SAAa;AAC1E,QAACE,IAAD,GAASH,GAAT,CAACG,IAAD;AAAA,QACAC,IADA,GACO,mBAASA,IAAT,CAAcC,SAAd,CAAwBL,IAAII,IAA5B,EAAkC,EAACE,SAAS,IAAV,EAAlC,CADP;;;AAGJ,QAAIC,iBAAcR,QAAd,oBAAsCI,IAAtC,uBAA6DC,IAA7D,4BAAuFD,IAAvF,MAAJ;;AAEA,qBAAeL,UAAf,WAA+BU,aAAa,EAACD,gBAAD,EAAUN,oBAAV,EAAb,CAA/B;AACH;;;AAED,SAASO,YAAT,QAA4C;AAAA,QAArBD,OAAqB,SAArBA,OAAqB;AAAA,QAAZN,SAAY,SAAZA,SAAY;;AACxC,WAAO,CAACQ,WAAWR,SAAX,KAAyBQ,WAAWC,IAArC,EAA2C,EAACH,gBAAD,EAA3C,CAAP;AACH;;AAED,IAAME,aAAa;AACfC,UAAM;AAAA,YAAEH,OAAF,SAAEA,OAAF;AAAA,4CACcA,OADd;AAAA,KADS;AAIfI,cAAU;AAAA,YAAEJ,OAAF,SAAEA,OAAF;AAAA,2CACSA,OADT;AAAA,KAJK;AAQfK,WAAO;AAAA,YAAEL,OAAF,SAAEA,OAAF;AAAA,4CACaA,OADb;AAAA,KARQ;AAWfM,WAAO;AAAA,YAAEN,OAAF,SAAEA,OAAF;AAAA,8CACeA,OADf;AAAA;AAXQ,CAAnB","file":"generators.js","sourcesContent":["// @flow\nimport doctrine from 'doctrine';\n\nexport function generateAssert({validation, location, tag, options: {generator}}) {\n    let {name} = tag,\n        type = doctrine.type.stringify(tag.type, {compact: true});\n\n    let message = `'${location}: Expected \\`${name}\\` to have type ${type}, got: ' + (typeof ${name})`;\n\n    return `if (!${validation}) {${generateWarn({message, generator})}}`;\n}\n\nfunction generateWarn({message, generator}) {\n    return (generators[generator] || generators.warn)({message})\n}\n\nconst generators = {\n    warn: ({message}) => `\n        console._warn(${message});\n    `,\n    debugger: ({message}) => `\n        console.warn(${message});\n        debugger;\n    `,\n    trace: ({message}) => `\n        console.trace(${message});\n    `,\n    throw: ({message}) => `\n        throw new Error(${message});\n    `\n};\n"]}