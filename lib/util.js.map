{"version":3,"sources":["../src/util.js"],"names":["validate","markProcessed","isProcessed","getLocation","leadingComments","state","opts","ignore","filename","getFilename","some","regexp","test","length","every","comment","type","path","Object","defineProperty","enumerable","value","__jsdoc_to_assert_checked__","start","node","loc","line","column","file"],"mappings":";;;;;QAGgBA,Q,GAAAA,Q;QAaAC,a,GAAAA,a;QAOAC,W,GAAAA,W;QAIAC,W,GAAAA,W;;AA1BhB;;AAEO,SAASH,QAAT,CAAkBI,eAAlB,EAAoDC,KAApD,EAAgE;AAAA,6BACvCA,KADuC,CAC9DC,IAD8D,CACvDC,MADuD;AAAA,QACvDA,MADuD,sCAC9C,EAD8C;AAAA,QAE/DC,QAF+D,GAEpDC,YAAYJ,KAAZ,CAFoD;;;AAInE,QAAIE,OAAOG,IAAP,CAAY;AAAA,eAAUC,OAAOC,IAAP,CAAYJ,QAAZ,CAAV;AAAA,KAAZ,CAAJ,EAAkD;AAC9C,eAAO,KAAP;AACH;;AAED,WAAOJ,mBACHA,gBAAgBS,MADb,IAEHT,gBAAgBU,KAAhB,CAAsB;AAAA,eAAWC,QAAQC,IAAR,KAAiB,cAA5B;AAAA,KAAtB,CAFJ;AAGH;AAEM,SAASf,aAAT,CAAuBgB,IAAvB,EAA6B;AAChCC,WAAOC,cAAP,CAAsBF,IAAtB,EAA4B,6BAA5B,EAA2D;AACvDG,oBAAY,KAD2C;AAEvDC,eAAO;AAFgD,KAA3D;AAIH;;AAEM,SAASnB,WAAT,CAAqBe,IAArB,EAA2B;AAC9B,WAAOA,KAAKK,2BAAZ;AACH;;AAEM,SAASnB,WAAT,CAAqBc,IAArB,EAA2BZ,KAA3B,EAAkC;AACjC,mBAAWI,YAAYJ,KAAZ,CAAX;AAAA,QACCkB,KADD,GACUN,KAAKO,IAAL,CAAUC,GADpB,CACCF,KADD;;;AAGJ,WAAO,oBAASf,QAAT,WAAyBe,MAAMG,IAA/B,SAAuCH,MAAMI,MAA7C,CAAP;AACH;;AAED,SAASlB,WAAT,CAAqBJ,KAArB,EAA4B;AACxB,WAAOA,MAAMuB,IAAN,CAAWtB,IAAX,CAAgBE,QAAvB;AACH","file":"util.js","sourcesContent":["// @flow\nimport {basename} from 'path';\n\nexport function validate(leadingComments: string[] | null, state: any) {\n    let {opts: {ignore = []}} = state,\n        filename = getFilename(state);\n\n    if (ignore.some(regexp => regexp.test(filename))) {\n        return false;\n    }\n\n    return leadingComments &&\n        leadingComments.length &&\n        leadingComments.every(comment => comment.type === 'CommentBlock');\n}\n\nexport function markProcessed(path) {\n    Object.defineProperty(path, '__jsdoc_to_assert_checked__', {\n        enumerable: false,\n        value: true\n    });\n}\n\nexport function isProcessed(path) {\n    return path.__jsdoc_to_assert_checked__;\n}\n\nexport function getLocation(path, state) {\n    let filename = getFilename(state),\n        {start} = path.node.loc;\n\n    return basename(filename) + `:${start.line}:${start.column}`;\n}\n\nfunction getFilename(state) {\n    return state.file.opts.filename;\n}\n"]}